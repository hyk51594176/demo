{"version":3,"sources":["pages/usercenter/OrganizationManage.tsx"],"names":[],"mappings":"wGAAA,OAmQe","file":"static/js/5.9d37bffa.chunk.js","sourcesContent":["// import { Component, Vue } from 'vue-property-decorator'\n// import PageTemplate from '@/components/layout/PageTemplate.vue'\n\n// interface Organization {\n//   businessTypes: Array<string>\n//   createDate: string\n//   createUser: string\n//   description: string\n//   modifyDate: string\n//   modifyUser: string\n//   organId: number\n//   organName: string\n//   sysId: string\n// }\n\n// interface OrganizationLabel {\n//   label: string\n//   partnerCode: string\n//   partnerName: string\n//   value: string\n// }\n\n// @Component({\n//   components: {\n//     PageTemplate\n//   }\n// })\n// export default class OrganizationManage extends Vue {\n//   dialgeTitle = ''\n//   formData = { keyWords: '' } as any\n//   dialogShow = false\n//   dialogData = {} as any\n//   businessList = []\n//   tableData = []\n//   get tableColumns() {\n//     return [\n//       {\n//         label: '组织机构ID',\n//         prop: 'organId'\n//       },\n//       {\n//         label: '组织机构名称',\n//         prop: 'organName'\n//       },\n//       {\n//         label: '组织机构描述',\n//         prop: 'description'\n//       },\n//       {\n//         label: '业务角色',\n//         prop: 'businessTypes',\n//         render: (h: any, { row }: any) => {\n//           if (row.businessTypes && row.businessTypes.length) {\n//             return (\n//               <div>\n//                 {row.businessTypes\n//                   .map((type: any) =>\n//                     this.businessList.find((obj: any) => obj.businessType === type)\n//                   )\n//                   .filter((obj: any) => obj)\n//                   .map((item: any) => {\n//                     return <el-tag>{item.label}</el-tag>\n//                   })}\n//               </div>\n//             )\n//           }\n//         }\n//       },\n//       {\n//         label: '创建时间',\n//         prop: 'createDate'\n//       },\n//       {\n//         label: '创建人',\n//         sortable: true,\n//         prop: 'createUser'\n//       },\n//       {\n//         label: '修改时间',\n//         prop: 'modifyDate'\n//       },\n//       {\n//         label: '修改人',\n//         sortable: true,\n//         prop: 'modifyUser'\n//       },\n//       {\n//         label: '操作',\n//         prop: 'btn',\n//         width: 150,\n//         fixed: 'right'\n//       }\n//     ]\n//   }\n//   formColumns = [\n//     {\n//       el: 'mSelect',\n//       prop: 'sysId',\n//       label: '所属系统',\n//       getList: () =>\n//         this.$api.getAllSysParam().then(({ data }: any) => ({ data: data.sysParamInfos })),\n//       valueKey: {\n//         value: 'sysId',\n//         label: 'systemName'\n//       },\n//       rules: {\n//         required: true,\n//         message: '请选择所属系统',\n//         trigger: 'change'\n//       },\n//       span: 9,\n//       listeners: {\n//         change: this.getAllBusinessBySysId\n//       }\n//     },\n//     {\n//       el: 'input',\n//       label: '关键字搜索',\n//       prop: 'keyWords',\n//       span: 9\n//     },\n//     {\n//       span: 6,\n//       prop: 'btn'\n//     }\n//   ]\n//   allCount = []\n\n//   get dialogColumns(): Array<any> {\n//     return [\n//       {\n//         el: 'autocomplete',\n//         prop: 'organName',\n//         popperClass: 'my-autocomplete',\n//         fetchSuggestions: this.querySearch,\n//         listeners: {\n//           select: this.handleSelect\n//         },\n//         slots: {\n//           default(h: any, { item }: any) {\n//             return (\n//               <div>\n//                 <div class=\"name\">{item.label}</div>\n//                 <span class=\"addr\">{item.value}</span>\n//               </div>\n//             )\n//           }\n//         },\n//         label: '组织机构名称',\n//         labelWidth: '130px',\n//         span: 22,\n//         rules: {\n//           required: true,\n//           message: '请输入组织机构名称',\n//           trigger: 'change'\n//         }\n//       },\n//       {\n//         el: 'input',\n//         prop: 'description',\n//         label: '组织机构描述',\n//         labelWidth: '130px',\n//         span: 22,\n//         rules: {\n//           required: true,\n//           message: '请输入组织机构描述',\n//           trigger: 'blur'\n//         }\n//       },\n//       {\n//         el: 'mSelect',\n//         prop: 'businessTypes',\n//         span: 22,\n//         label: '业务角色',\n//         labelWidth: '130px',\n//         multiple: true,\n//         dataList: this.businessList\n//       }\n//     ]\n//   }\n\n//   querySearch(queryString: string, cb: any) {\n//     let list = this.allCount.filter(\n//       (obj: any) =>\n//         obj.label.toLowerCase().indexOf(queryString.toLowerCase()) > -1 ||\n//         obj.value.toLowerCase().indexOf(queryString.toLowerCase()) > -1\n//     )\n//     cb(list)\n//   }\n\n//   handleSelect(item: OrganizationLabel) {\n//     this.dialogData.description = item.label\n//   }\n\n//   getAllAccount() {\n//     this.$api.getAllAccount({ callMode: 1 }).then((res: any) => {\n//       this.allCount = res\n//     })\n//   }\n\n//   getAllBusinessBySysId(sysId: string) {\n//     this.businessList = []\n//     this.tableData = []\n//     if (!sysId) return\n//     this.getTableList()\n//     this.$api.getAllBusinessBySysId({ sysId }).then((res: any) => {\n//       this.businessList = (res.data || []).map((obj: any) => ({\n//         ...obj,\n//         label: obj.businessName,\n//         value: obj.businessType\n//       }))\n//     })\n//   }\n\n//   $refs!: {\n//     sform: any\n//     dform: any\n//   }\n//   showDialog(obj?: Organization) {\n//     this.$refs.sform.validate().then(() => {\n//       this.dialogShow = true\n//       this.dialogData = {\n//         description: '',\n//         organName: '',\n//         sysId: this.formData.sysId || '',\n//         ...(obj || {})\n//       }\n//       if (obj) {\n//         this.dialgeTitle = '编辑组织机构'\n//       } else {\n//         this.dialgeTitle = '新增组织机构'\n//       }\n//       this.getAllAccount()\n//     })\n//   }\n\n//   getTableList() {\n//     this.$refs.sform.validate().then(() => {\n//       this.$api.getAllOrganBySysId(this.formData).then(({ data }: any) => {\n//         this.tableData = data\n//       })\n//     })\n//   }\n\n//   addOrEdit() {\n//     this.$refs.dform.validate().then(() => {\n//       this.$api.addOrganInfo(this.dialogData).then(() => {\n//         this.dialogShow = false\n//         this.getTableList()\n//       })\n//     })\n//   }\n\n//   deleteData(obj: Organization) {\n//     this.$api.deleteOrganInfo({ id: obj.organId }).then(() => {\n//       this.getTableList()\n//     })\n//   }\n// }\nexport default {}\n"],"sourceRoot":""}