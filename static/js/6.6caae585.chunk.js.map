{"version":3,"sources":["pages/usercenter/RoleManage.tsx"],"names":[],"mappings":"wGAAA,OA8Se","file":"static/js/6.6caae585.chunk.js","sourcesContent":["// import { Component, Vue } from 'vue-property-decorator'\n// import PageTemplate from '@/components/layout/PageTemplate.vue'\n\n// interface Role {\n//   createDate: string\n//   createUser: string\n//   description: string\n//   menuButtons: Array<any>\n//   modifyDate: string\n//   modifyUser: string\n//   roleId: number\n//   roleName: string\n// }\n\n// @Component({\n//   components: {\n//     PageTemplate\n//   }\n// })\n// export default class RoleManage extends Vue {\n//   dialgeTitle = ''\n//   formData = {\n//     keyWords: ''\n//   } as any\n//   dialogShow = false\n//   dialogData = {\n//     menuIds: []\n//   } as any\n//   menus = [] as any\n//   defaultProps = {\n//     children: 'childMenuInfos',\n//     label: 'menuName'\n//   }\n//   tableData = []\n//   get tableColumns() {\n//     return [\n//       {\n//         label: '角色ID',\n//         prop: 'roleId'\n//       },\n//       {\n//         label: '角色名称',\n//         prop: 'roleName'\n//       },\n//       {\n//         label: '角色描述',\n//         prop: 'description'\n//       },\n//       {\n//         label: '业务角色',\n//         prop: 'businessType',\n//         render: (h: any, { row }: any) => {\n//           if (row.businessType) {\n//             let obj: any = this.businessList.find(\n//               (obj: any) => obj.businessType === row.businessType\n//             )\n//             return obj ? <el-tag>{obj.label}</el-tag> : null\n//           }\n//         }\n//       },\n//       {\n//         label: '创建时间',\n//         prop: 'createDate'\n//       },\n//       {\n//         label: '创建人',\n//         sortable: true,\n//         prop: 'createUser'\n//       },\n//       {\n//         label: '修改时间',\n//         prop: 'modifyDate'\n//       },\n//       {\n//         label: '修改人',\n//         sortable: true,\n//         prop: 'modifyUser'\n//       },\n//       {\n//         label: '操作',\n//         prop: 'btn',\n//         width: 150,\n//         fixed: 'right'\n//       }\n//     ]\n//   }\n//   formColumns = [\n//     {\n//       el: 'mSelect',\n//       prop: 'sysId',\n//       label: '所属系统',\n//       getList: () =>\n//         this.$api.getAllSysParam().then(({ data }: any) => ({ data: data.sysParamInfos })),\n//       valueKey: {\n//         value: 'sysId',\n//         label: 'systemName'\n//       },\n//       rules: {\n//         required: true,\n//         message: '请选择所属系统',\n//         trigger: 'change'\n//       },\n//       span: 9,\n//       listeners: {\n//         change: this.getAllBusinessBySysId\n//       }\n//     },\n//     {\n//       el: 'input',\n//       label: '关键字搜索',\n//       prop: 'keyWords',\n//       span: 9\n//     },\n//     {\n//       span: 6,\n//       prop: 'btn'\n//     }\n//   ]\n//   businessList = []\n\n//   get dialogColumns() {\n//     return [\n//       {\n//         el: 'input',\n//         prop: 'roleName',\n//         label: '角色名称',\n//         labelWidth: '130px',\n//         rules: {\n//           required: true,\n//           message: '请输入角色名称',\n//           trigger: 'blur'\n//         }\n//       },\n//       {\n//         el: 'input',\n//         prop: 'description',\n//         label: '角色描述',\n//         labelWidth: '130px',\n//         rules: {\n//           required: true,\n//           message: '请输入角色描述',\n//           trigger: 'blur'\n//         }\n//       },\n//       {\n//         el: 'mSelect',\n//         prop: 'businessType',\n//         label: '业务角色',\n//         labelWidth: '130px',\n//         dataList: this.businessList\n//       },\n//       {\n//         label: '菜单权限',\n//         prop: 'menuIds',\n//         span: 22\n//       }\n//     ]\n//   }\n\n//   getAllBusinessBySysId(sysId: number) {\n//     this.businessList = []\n//     this.tableData = []\n//     if (!sysId) return\n//     this.getTableList()\n//     this.$api.getAllBusinessBySysId({ sysId }).then((res: any) => {\n//       this.businessList = (res.data || []).map((obj: any) => ({\n//         ...obj,\n//         label: obj.businessName,\n//         value: obj.businessType\n//       }))\n//     })\n//   }\n\n//   showDialog(obj?: Role) {\n//     this.$refs.sform.validate().then(() => {\n//       this.dialogShow = true\n//       this.dialogData = {\n//         menuIds: [],\n//         menuButtons: [],\n//         sysId: this.formData.sysId || '',\n//         ...(obj || {})\n//       }\n//       if (obj) {\n//         this.dialgeTitle = '编辑角色'\n//       } else {\n//         this.dialgeTitle = '新增角色'\n//       }\n//       this.getAllFunctionBySysId()\n//     })\n//   }\n\n//   setBtnList(obj: any, menuName: string) {\n//     if (!obj.btnList) {\n//       obj.btnList = [{ label: '基础权限', value: '基础权限' }]\n//     }\n//     obj.btnList.push({\n//       label: menuName,\n//       value: menuName\n//     })\n//   }\n\n//   formatTreeData(arr: Array<any>, list: Array<any> = [], level: number = 0) {\n//     // 先拿出数组第一个\n//     const firstObj = arr[0]\n//     // 如果没有父级直接放入数组\n//     if (!firstObj.parentId) {\n//       list.push(firstObj)\n//       if (firstObj.isRoute === '0') {\n//         this.dialogData.menuButtons = this.dialogData.menuButtons.filter(\n//           (item: any) => item.menuId !== firstObj.menuId\n//         )\n//       }\n//     } else {\n//       firstObj.buttonView = (\n//         this.dialogData.menuButtons.find((o: any) => o.menuId === firstObj.menuId) || {\n//           buttonView: []\n//         }\n//       ).buttonView\n//     }\n//     // 过滤数组\n//     if (firstObj.menuType === 4) {\n//       const parentMenu = arr.find((p: any) => p.menuId === firstObj.parentId)\n//       this.setBtnList(parentMenu, firstObj.menuName)\n//       arr.shift()\n//     } else {\n//       arr = arr.filter((item, index) => {\n//         // 第一个过滤掉\n//         if (Number(item.isRoute) === 1) {\n//           item.buttonView = (\n//             this.dialogData.menuButtons.find((obj: any) => obj.menuId === item.menuId) || {\n//               buttonView: []\n//             }\n//           ).buttonView\n//         }\n//         if (index === 0) return false\n//         // 如果当前对象为 firstObj 的叶子 节点\n//         if (item.menuType === 4) {\n//           if (item.parentId === firstObj.menuId) {\n//             this.setBtnList(firstObj, item.menuName)\n//           } else {\n//             const parentMenu = arr.find(p => p.menuId === item.parentId)\n//             this.setBtnList(parentMenu, item.menuName)\n//           }\n//           return false\n//         } else {\n//           if (item.parentId === firstObj.menuId)\n//             (firstObj.childMenuInfos || (firstObj.childMenuInfos = [])).push(item)\n//           // 如果当前对象为 firstObj 的父节点\n//           if (item.menuId === firstObj.parentId)\n//             (item.childMenuInfos || (item.childMenuInfos = [])).push(firstObj)\n//           return item.parentId !== firstObj.menuId\n//         }\n//       })\n//     }\n//     //  判断是否数组还有值 有值就执行递归\n//     if (arr.length) this.formatTreeData(arr, list, level + 1)\n//     return list\n//   }\n\n//   getAllFunctionBySysId() {\n//     this.$api.getAllFunctionBySysId({ sysId: this.formData.sysId }).then(({ data }: any) => {\n//       this.menus = this.formatTreeData(data.menuInfos)\n//       this.dialogData.menuIds = this.dialogData.menuButtons.map((m: any) => m.menuId)\n//     })\n//   }\n\n//   $refs!: {\n//     sform: any\n//     dform: any\n//     tree: any\n//   }\n//   getTableList() {\n//     this.$refs.sform.validate().then(() => {\n//       this.$api.getAllRoleBySysId(this.formData).then(({ data }: any) => {\n//         this.tableData = data.roleInfos\n//       })\n//     })\n//   }\n//   addOrEdit() {\n//     this.$refs.dform.validate().then(() => {\n//       const params = {\n//         ...this.dialogData,\n//         menuButtons: [\n//           ...this.$refs.tree.getHalfCheckedNodes().map((obj: any) => ({ menuId: obj.menuId })),\n//           ...this.$refs.tree\n//             .getCheckedNodes()\n//             .map((obj: any) => ({ menuId: obj.menuId, buttonView: obj.buttonView }))\n//         ]\n//       }\n//       delete params.menuIds\n//       this.$api.addSysRole(params).then(() => {\n//         this.dialogShow = false\n//         this.getTableList()\n//       })\n//     })\n//   }\n//   deleteData(obj: Role) {\n//     this.$api.deleteSysRole({ id: obj.roleId }).then(() => {\n//       this.getTableList()\n//     })\n//   }\n// }\nexport default {}\n"],"sourceRoot":""}