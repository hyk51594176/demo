{"version":3,"sources":["pages/usercenter/UserManage.tsx"],"names":[],"mappings":"wGAAA,OAkjBe","file":"static/js/8.c40690ac.chunk.js","sourcesContent":["// import { Vue, Component } from 'vue-property-decorator'\n// import PageTemplate from '@/components/layout/PageTemplate.vue'\n// import { PageInfo } from '../../types'\n\n// @Component({\n//   components: {\n//     PageTemplate\n//   }\n// })\n// export default class UserManage extends Vue {\n//   dialgeTitle = ''\n//   editSysObj = {} as any\n//   formData = {\n//     keyWords: ''\n//   }\n//   pageInfo = {\n//     pageSize: 15,\n//     pageNum: 1,\n//     total: 0\n//   }\n//   sysShow = false\n//   dialogShow = false\n//   selectList = []\n//   sysList = [] as any // 当前登录用户所有拥有的系统权限\n//   dialogData = {\n//     sysInfos: []\n//   } as any\n//   tableData = []\n//   get tableColumns() {\n//     return [\n//       {\n//         label: '用户名',\n//         prop: 'userName'\n//       },\n//       {\n//         label: '真实姓名',\n//         prop: 'realName'\n//       },\n//       {\n//         label: '手机号',\n//         prop: 'telephone'\n//       },\n//       {\n//         label: '邮箱',\n//         prop: 'email'\n//       },\n//       {\n//         label: '用户类型',\n//         sortable: true,\n//         width: 100,\n//         prop: 'userType',\n//         format(row: any) {\n//           return row.userType === '2' ? '外部用户' : '内部用户'\n//         }\n//       },\n//       {\n//         label: '系统平台',\n//         prop: 'sysInfos',\n//         align: 'left',\n//         headerAlign: 'center',\n//         width: 150,\n//         render(h: any, { row }: any) {\n//           return (\n//             <div>\n//               {row.sysInfos.map((obj: any) => {\n//                 return (\n//                   <el-tag key={obj.sysName} disable-transitions={true} type=\"success\">\n//                     {obj.sysName}\n//                   </el-tag>\n//                 )\n//               })}\n//             </div>\n//           )\n//         }\n//       },\n//       {\n//         label: '状态',\n//         sortable: true,\n//         prop: 'state',\n//         format(row: any) {\n//           return row.state === 1 ? '启用' : '禁用'\n//         }\n//       },\n//       {\n//         label: '创建时间',\n//         prop: 'createDate',\n//         width: 100\n//       },\n//       {\n//         width: 100,\n//         sortable: true,\n//         label: '创建人',\n//         prop: 'createUser'\n//       },\n//       {\n//         label: '修改时间',\n//         prop: 'modifyDate',\n//         width: 100\n//       },\n//       {\n//         width: 100,\n//         sortable: true,\n//         label: '修改人',\n//         prop: 'modifyUser'\n//       },\n//       {\n//         label: '操作',\n//         prop: 'btn',\n//         headerAlign: 'center',\n//         align: 'left',\n//         fixed: 'right',\n//         width: 80\n//       }\n//     ]\n//   }\n//   formColumns = [\n//     {\n//       el: 'select',\n//       prop: 'sysId',\n//       label: '所属系统',\n//       getList: this.getAllSysParam,\n//       valueKey: {\n//         value: 'sysId',\n//         label: 'systemName'\n//       },\n//       span: 6\n//     },\n//     {\n//       label: '用户类型',\n//       prop: 'userType',\n//       el: 'mSelect',\n//       span: 6,\n//       dataList: [\n//         {\n//           label: '内部用户',\n//           value: 1\n//         },\n//         {\n//           label: '外部用户',\n//           value: 2\n//         }\n//       ]\n//     },\n//     {\n//       el: 'input',\n//       label: '关键字搜索',\n//       prop: 'keyWords',\n//       span: 6\n//     },\n//     {\n//       span: 6,\n//       prop: 'btn'\n//     }\n//   ]\n//   sysDialogShow = false\n//   get dialogTableColumns() {\n//     return [\n//       {\n//         label: '是否启用',\n//         prop: 'checked',\n//         width: 80,\n//         format(row: any) {\n//           return row.checked ? '已启用' : '未启用'\n//         }\n//       },\n//       {\n//         label: '系统名称',\n//         prop: 'sysName',\n//         width: 120\n//       },\n//       {\n//         label: '组织机构',\n//         prop: 'organInfos',\n//         minWidth: 200,\n//         render(h: any, { row }: any) {\n//           return (\n//             <div>\n//               {row.organInfos.map((obj: any) => {\n//                 return (\n//                   <el-tag key={obj.organName} type=\"success\">\n//                     {obj.description || obj.organName}\n//                   </el-tag>\n//                 )\n//               })}\n//             </div>\n//           )\n//         }\n//       },\n//       {\n//         label: '角色',\n//         prop: 'roleInfos',\n//         multiple: true,\n//         minWidth: 200,\n//         render(h: any, { row }: any) {\n//           return (\n//             <div>\n//               {row.roleInfos.map((obj: any) => {\n//                 return (\n//                   <el-tag key={obj.sysName} type=\"success\">\n//                     {obj.roleName}\n//                   </el-tag>\n//                 )\n//               })}\n//             </div>\n//           )\n//         }\n//       },\n//       { label: '操作', prop: 'btns' }\n//     ]\n//   }\n\n//   created() {\n//     this.getTableList(true)\n//   }\n\n//   get dialogColumns() {\n//     return [\n//       {\n//         label: '用户类型',\n//         prop: 'userType',\n//         el: 'mSelect',\n//         disabled: !!this.dialogData.userId,\n//         dataList: [\n//           {\n//             label: '内部用户',\n//             value: '1'\n//           },\n//           {\n//             label: '外部用户',\n//             value: '2'\n//           }\n//         ],\n//         rules: {\n//           required: true,\n//           message: '请选择用户类型',\n//           trigger: 'change'\n//         },\n//         span: 22\n//       },\n//       {\n//         label: '用户名',\n//         prop: 'userName',\n//         span: 22,\n//         el: 'input',\n//         disabled: !!this.dialogData.userId,\n//         rules: {\n//           required: true,\n//           message: '请输入用户名',\n//           trigger: 'blur'\n//         }\n//       },\n//       {\n//         label: '真实姓名',\n//         prop: 'realName',\n//         span: 22,\n//         el: 'input',\n//         rules: {\n//           required: true,\n//           message: '请输入真实姓名',\n//           trigger: 'blur'\n//         }\n//       },\n//       {\n//         label: '手机号',\n//         prop: 'telephone',\n//         span: 22,\n//         el: 'input'\n//       },\n//       ...(this.dialogData.userType === '2'\n//         ? [\n//             {\n//               label: '邮箱',\n//               prop: 'email',\n//               span: 22,\n//               el: 'input'\n//             }\n//           ]\n//         : [])\n//     ]\n//   }\n\n//   get sysColumns() {\n//     return [\n//       {\n//         label: '是否启用',\n//         prop: 'checked',\n//         el: 'checkbox'\n//       },\n//       ...this.getOtherColumns()\n//     ]\n//   }\n\n//   deleteUser(obj: any) {\n//     this.$confirm('此操作将永久删除该条数据, 是否继续?', '提示', {\n//       confirmButtonText: '确定',\n//       cancelButtonText: '取消',\n//       type: 'warning'\n//     }).then(() => {\n//       this.$api\n//         .deleteUser(\n//           {\n//             userName: obj.userName,\n//             uId: obj.userId,\n//             userType: obj.userType\n//           },\n//           '删除成功'\n//         )\n//         .then(() => {\n//           this.getTableList()\n//         })\n//     })\n//   }\n\n//   getOtherColumns() {\n//     if (this.editSysObj.checked) {\n//       return [\n//         {\n//           label: '组织机构',\n//           el: 'mSelect',\n//           prop: 'organIds',\n//           multiple: true,\n//           getList: (params: any) => this.$api.getAllOrganBySysId(params),\n//           valueKey: {\n//             label: 'description',\n//             value: 'organId'\n//           },\n//           span: 22,\n//           params: {\n//             sysId: 'sysId'\n//           },\n//           listeners: {\n//             currentObj: (data: any) => {\n//               this.editSysObj.organInfos = data\n//               if (\n//                 data &&\n//                 data.length &&\n//                 !data.some((obj: any) => !obj.businessTypes || obj.businessTypes.length === 0)\n//               ) {\n//                 this.editSysObj.businessTypes = Array.from(\n//                   new Set(\n//                     data\n//                       .map((obj: any) => obj.businessTypes)\n//                       .reduce((x: any, y: any) => [...x, ...y], [])\n//                   )\n//                 )\n//               } else {\n//                 this.editSysObj.businessTypes = []\n//               }\n//             }\n//           }\n//         },\n//         {\n//           label: '角色',\n//           prop: 'roleIds',\n//           multiple: true,\n//           span: 22,\n//           el: 'mSelect',\n//           getList: (params: any) =>\n//             this.$api.getAllRoleBySysId(params).then(({ data }: any) => data.roleInfos),\n//           listeners: {\n//             currentObj: (data: any) => {\n//               this.editSysObj.roleInfos = data\n//             }\n//           },\n//           rules: {\n//             required: true,\n//             message: '请选择角色',\n//             trigger: 'change',\n//             type: 'array'\n//           },\n//           valueKey: {\n//             label: 'roleName',\n//             value: 'roleId'\n//           },\n//           params: {\n//             sysId: 'sysId',\n//             businessTypes: 'businessTypes'\n//           }\n//         }\n//       ]\n//     }\n//     return []\n//   }\n\n//   editSys(obj: any) {\n//     this.editSysObj = {\n//       ...obj,\n//       businessTypes: obj.businessTypes || [],\n//       roleInfos: obj.roleInfos.map((r: any) => ({ ...r }))\n//     }\n//     this.sysDialogShow = true\n//   }\n\n//   getAllSysParam() {\n//     return this.$api.getAllSysParam().then(({ data }: any) => {\n//       this.sysList = data.sysParamInfos\n//       return { data: data.sysParamInfos }\n//     })\n//   }\n\n//   enabledSys(row: any) {\n//     interface DataValue {\n//       sysId: number\n//       sysName: string\n//       checked: boolean\n//       organInfos: Array<any>\n//       roleInfos: Array<any>\n//       systemType: any\n//       organIds?: Array<any>\n//       roleIds?: Array<any>\n//     }\n\n//     this.sysShow = true\n//     this.dialogData = {\n//       ...row,\n//       sysInfos: this.sysList\n//         .map((obj: any) => {\n//           const data: DataValue = {\n//             sysId: obj.sysId,\n//             sysName: obj.systemName,\n//             checked: false,\n//             organInfos: [],\n//             roleInfos: [],\n//             systemType: obj.systemType\n//           }\n//           const item = row.sysInfos.find((item: any) => item.sysId === obj.sysId)\n//           if (item) {\n//             data.checked = true\n//             data.roleInfos = item.roleInfos\n//             data.organInfos = item.organInfos || []\n//             data.organIds = (item.organInfos || []).map((r: any) => r.organId)\n//             data.roleIds = item.roleInfos.map((r: any) => r.roleId)\n//           }\n//           return data\n//         })\n//         .filter((obj: any) => obj.systemType === row.userType)\n//     }\n//   }\n\n//   showDialog(row: any) {\n//     this.dialogShow = true\n//     this.dialogData = {\n//       ...(row || {})\n//     }\n//     this.dialgeTitle = row ? '编辑用户' : '新增用户'\n//   }\n\n//   pageChange(pageInfo: PageInfo) {\n//     this.pageInfo = pageInfo\n//     this.getTableList(true)\n//   }\n\n//   clearTableData() {\n//     this.tableData = []\n//     this.pageInfo = {\n//       pageSize: 15,\n//       pageNum: 1,\n//       total: 0\n//     }\n//   }\n\n//   getTableList(type?: boolean) {\n//     if (!type) {\n//       this.pageInfo = {\n//         pageSize: 15,\n//         pageNum: 1,\n//         total: 0\n//       }\n//     }\n//     this.tableData = []\n//     this.$api\n//       .getAllUserInfoList({ ...this.formData, pageInfo: this.pageInfo })\n//       .then(({ data, pageInfo }: any) => {\n//         this.tableData = data\n//         this.pageInfo = pageInfo\n//       })\n//       .catch(this.clearTableData)\n//   }\n\n//   modifyUserStatus(row: any) {\n//     const state = row.state === 1 ? 2 : 1\n//     this.$api\n//       .modifyUserStatus({\n//         uId: row.userId,\n//         state\n//       })\n//       .then(() => {\n//         row.state = state\n//       })\n//   }\n\n//   $refs!: {\n//     dform: any\n//     sysform: any\n//   }\n//   addOrEdit() {\n//     this.$refs.dform.validate().then(() => {\n//       const params = {\n//         ...this.dialogData,\n//         uId: this.dialogData.userId\n//       }\n//       // if (!params.uId) {\n//       //   params.sysInfos = this.dialogData.sysInfos.filter(obj => obj.checked).map(obj => {\n//       //     const data = { ...obj, roleInfos: obj.roleInfos.map(roleId => ({ roleId })) }\n//       //     delete data.roleIds\n//       //     delete data.checked\n//       //     return data\n//       //   })\n//       // }\n//       delete params.userId\n//       this.$api.addUserInfo(params, '操作成功').then(() => {\n//         this.dialogShow = false\n//         this.getTableList()\n//       })\n//     })\n//   }\n\n//   modifyUserBindInfo() {\n//     this.$refs.sysform.validate().then(() => {\n//       const params = {\n//         sysInfo: {\n//           sysId: this.editSysObj.sysId,\n//           organId: this.editSysObj.organId,\n//           roleInfos: this.editSysObj.roleInfos,\n//           organInfos: this.editSysObj.organInfos\n//         },\n//         uId: this.dialogData.userId,\n//         userName: this.dialogData.userName,\n//         checked: this.editSysObj.checked\n//       }\n//       this.$api.modifyUserBindInfo(params).then(() => {\n//         this.dialogData.sysInfos = this.dialogData.sysInfos.map((obj: any) => {\n//           if (obj.sysId === this.editSysObj.sysId) {\n//             return {\n//               ...this.editSysObj,\n//               organId: this.editSysObj.checked ? this.editSysObj.organId : null,\n//               organName: this.editSysObj.checked ? this.editSysObj.organName : null,\n//               roleInfos: this.editSysObj.checked ? this.editSysObj.roleInfos : []\n//             }\n//           }\n//           return obj\n//         })\n//         this.sysDialogShow = false\n//         this.getTableList()\n//       })\n//     })\n//   }\n\n//   resetPass(row: any) {\n//     this.$api.resetUserPwd(\n//       {\n//         uId: row.userId,\n//         userType: row.userType\n//       },\n//       '重置密码成功'\n//     )\n//   }\n\n//   addRemoteDesktop(user: any) {\n//     this.$api.addRemoteDesktop({ uId: user.userId }, '操作成功').then(this.getTableList)\n//   }\n// }\nexport default {}\n"],"sourceRoot":""}